/* Class = "NSTableColumn"; headerCell.title = "String[TableId]/Number[Length]"; ObjectID = "2TV-zh-dka"; */
"2TV-zh-dka.headerCell.title" = "String[TableId]/Number[Length]";

/* Class = "NSTableColumn"; headerToolTip = "String[TableId]/Number[Length]"; ObjectID = "2TV-zh-dka"; */
"2TV-zh-dka.headerToolTip" = "String[TableId]/Number[Length]";

/* Class = "NSButton"; ibShadowedToolTip = "<key>DropOem</key>\n<true/>\nDrops all internal SSDT tables to avoid conflicts when generating an SSDT for your processor, which contains P- and C-States. Clover can do this automatically or you can specify an external file, which will be loaded from EFI/OEM/[model]/ACPI/patched."; ObjectID = "3OB-Qg-u2B"; */
"3OB-Qg-u2B.ibShadowedToolTip" = "<key>DropOem</key>\n<true/>\n删除所有内部SSDT表以避免在为包含P和C状态的处理器生成SSDT时发生冲突。 Clover可以自动执行此操作，也可以指定外部文件，该文件将从 EFI/OEM/[model]/ACPI/patched.";

/* Class = "NSButton"; ibShadowedToolTip = "Renames device AC0 to ADP1."; ObjectID = "4L0-lZ-ZbZ"; */
"4L0-lZ-ZbZ.ibShadowedToolTip" = "更名设备 AC0 to ADP1.";

/* Class = "NSButton"; ibShadowedToolTip = "This device is used for IntelHDxxxx graphics. \nThis is required when using the FakeID->IMEI bit. \nIt does nothing on Core 2 systems."; ObjectID = "5cK-Vm-6vG"; */
"5cK-Vm-6vG.ibShadowedToolTip" = "此设备用于IntelHDxxxx图形。\n
使用FakeID->IMEI位时需要这样做。\n
它在Core 2系统上没有任何作用。";

/* Class = "NSButton"; ibShadowedToolTip = "Provide a set of corrections to DSDT to make your system \"Darwin\"\nto be identified as \"Windows 2001\", like most ACPI systems. \nMore ACPI devices will work in this mode."; ObjectID = "7fD-EQ-f6e"; */
"7fD-EQ-f6e.ibShadowedToolTip" = "为DSDT提供一组更正，使您的系统\"Darwin\"\n
与大多数ACPI系统一样，被识别为\"Windows 2001\"。\n
更多ACPI设备将在此模式下工作。";

/* Class = "NSButton"; ibShadowedToolTip = "<key>SlpSmiAtWake</key>\n<true>\nIt adds SLP_SMI_EN=0 at every wake. It may help solve sleep and shutdown issues on UEFI boot."; ObjectID = "7Md-lK-CZ9"; */
"7Md-lK-CZ9.ibShadowedToolTip" = "<key>SlpSmiAtWake</key>\n<true>\n添加SLP_SMI_EN=0在每次唤醒时. 它可能有助于解决UEFI启动时的睡眠和关机问题。";

/* Class = "NSButton"; ibShadowedToolTip = "Inserts plugin-type One to CpuPm SSDT"; ObjectID = "07p-TL-NPT"; */
"07p-TL-NPT.ibShadowedToolTip" = "将插件类型插入到CpuPm SSDT中";

/* Class = "NSButton"; ibShadowedToolTip = "Name ACST is used differently by Apple and ASUS. \nFor ASUS it's the AC adapter state, but for Apple it's\n a replacement for _CST, c-states table. \nTo avoid conflict it is necessary to rename such function to something else."; ObjectID = "9LT-be-eqr"; */
"9LT-be-eqr.ibShadowedToolTip" = "名称ACST的使用方式与Apple和ASUS不同。\n
对于华硕而言，它是AC适配器状态，但对于Apple而言\n
 替换_CST，c-states表。\n
为避免冲突，有必要将此类功能重命名为其他功能。";

/* Class = "NSButton"; ibShadowedToolTip = "<key>SuspendOverride</key>\n<true>\nInfluences the DSDT patch FixShutdown_0004 and extends the fix from state 5 to 3, 4 and 5 (sleep and suspend)."; ObjectID = "82W-UW-8aK"; */
"82W-UW-8aK.ibShadowedToolTip" = "<key>SuspendOverride</key>\n<true>\nI影响DSDT补丁FixShutdown_0004并将修复从状态5扩展到3,4和5（睡眠和暂停）。";

/* Class = "NSButton"; ibShadowedToolTip = "Only patches the \"Darwin OS\" identification."; ObjectID = "a85-0W-IoZ"; */
"a85-0W-IoZ.ibShadowedToolTip" = "仅修补\"Darwin OS\"标识。";

/* Class = "NSButton"; ibShadowedToolTip = "Injects device and properties for the WiFi controller. \nAlso made FakeID for some known substitutions."; ObjectID = "Aib-Xz-XYs"; */
"Aib-Xz-XYs.ibShadowedToolTip" = "注入WiFi控制器的设备和属性。\n
还为一些已知的替换制作了FakeID。";

/* Class = "NSButton"; ibShadowedToolTip = "Excludes IRQ(0) from RTC device."; ObjectID = "AOU-P1-GqP"; */
"AOU-P1-GqP.ibShadowedToolTip" = "从RTC设备中排除IRQ(0)。";

/* Class = "NSTableView"; ibShadowedToolTip = "Binary DSDT patching\n\n<key>Patches</key>\n  <array>\n    <dict>\n      <key>Find</key>\n      <data>W4IeQkFUMQhfSElEDEHQDAoIX1VJRAEUCF9TVEEApAA=</data>\n      <key>Replace</key>\n      <data></data>\n    </dict>\n    <dict>\n      <key>Find</key>\n      <data>UFhTWAhfQURSAAhfUFJXEgYC</data>\n      <key>Replace</key>\n      <data>UFhTWAhfQURSAAhfU1VOCgQIX1BSVxIGAg==</data>\n    </dict>\n  </array>"; ObjectID = "ar5-MC-CKJ"; */
"ar5-MC-CKJ.ibShadowedToolTip" = "二进制DSDT修补\n\n<key>Patches</key>\n<array>\n<dict>\n<key>Find</key>\n<data>W4IeQkFUMQhfSElEDEHQDAoIX1VJRAEUCF9TVEEApAA=</data>\n<key>Replace</key>\n<data></data>\n</dict>\n<dict>\n<key>Find</key>\n<data>UFhTWAhfQURSAAhfUFJXEgYC</data>\n<key>Replace</key>\n<data>UFhTWAhfQURSAAhfU1VOCgQIX1BSVxIGAg==</data>\n</dict>\n</array>";

/* Class = "NSButton"; ibShadowedToolTip = "<key>Generate</key>\n<dict>\n  <key>PStates</key>\n  <true/>\n</dict>\nAutomatic SSDT table generation, which extends the processor section with _PPC, _PPC and _PSS methods.\n\n_PCT - Performance control. Controls SpeedStep functions\n_PPC - Performance Present Capabilities. SpeedStep capabilities. This method returns a value limiting the frequency. Look further for PLimitDict.\n_PSS - Performance Supported States. An array containing possible CPU states - P-States.\nPLimitDict, UnderVoltStep and Turbo will be taken into consideration when generated this array."; ObjectID = "bdA-kb-5za"; */
"bdA-kb-5za.ibShadowedToolTip" = "<key>Generate</key>\n<dict>\n<key>PStates</key>\n<true/>\n</dict>\n自动SSDT表生成，它使用_PPC，_PPC和_PSS方法扩展处理器部分。\n\n

__PCT - 性能控制。控制SpeedStep功能
_PPC - 绩效现有能力。 SpeedStep功能。此方法返回限制频率的值。进一步了解PLimitDict。\n
_PSS - 性能支持状态。包含可能的CPU状态的数组 - P状态。\n
生成此数组时将考虑PLimitDict，\nUnderVoltStep和Turbo。";

/* Class = "NSButton"; ibShadowedToolTip = "Key UseSystemIO at SSDT section will serve to choose in the generated _CST tables between:\n\nRegister (FFixedHW,\nRegister (SystemIO,"; ObjectID = "cbd-3A-zqo"; */
"cbd-3A-zqo.ibShadowedToolTip" = "SSDT部分的密钥UseSystemIO将用于在生成的_CST表中选择：\n\n

Register (FFixedHW,\n
Register (SystemIO,\n";

/* Class = "NSButton"; ibShadowedToolTip = "This is a very functional patch for video devices. \nRecommended even if you don't want to inject properties to the device.\n When this bit is set other settings like FakeID will be applied as well."; ObjectID = "dff-je-gcc"; */
"dff-je-gcc.ibShadowedToolTip" = "这是一个非常实用的视频设备补丁。\n
即使您不想将属性注入设备，也建议使用。\n
 设置此位时，也会应用其他设置，如\nFakeID。";

/* Class = "NSTextField"; ibShadowedToolTip = "<key>MaxMultiplier</key>\n<integer>30</integer>\nIntroduces as an analogy to the minimal multiplier but not really necessary. It is not advised to set it."; ObjectID = "ecf-V5-wTF"; */
"ecf-V5-wTF.ibShadowedToolTip" = "<key>MaxMultiplier</key>\n<integer>30</integer>\n\n引入作为最小乘数的类比，但并非真正必要。不建议设置它。";

/* Class = "NSButton"; ibShadowedToolTip = "Helps enable SpeedStep on Ivy Bridge+ systems."; ObjectID = "fUT-Un-eDT"; */
"fUT-Un-eDT.ibShadowedToolTip" = "帮助在Ivy Bridge +系统上启用SpeedStep。";

/* Class = "NSButton"; ibShadowedToolTip = "AutoMerge feature for merging/replacement of SSDTs (or other AMLs) by content in ACPI/patched\n \nBy setting config.plist/ACPI/AutoMerge=true (default is false to retain old behavior), content in ACPI/patched will attempt to be matched against native bits referred to by the XSDT.  Much like how DSDT.aml placed in ACPI/patched *replaces* native DSDT, you can use this feature to replace SSDTs (or other tables) automatically without using DropTables, or DropOem. More importantly, the relative order of the tables is retained.  It means you can replace only a single table without resorting to DropOem=true and SortedOrder (which implies placing all SSDTs in ACPI/patched). \n \nThe matching is based on file name and OemTableID/signature.\n \nFor SSDTs, the number in the file name is used to find the index in XSDT.  So, a file named SSDT-5.aml in ACPI/patched will replace the 6th SSDT in XSDT (because SSDTs extracted start at SSDT-0.aml).  Additional checking is done with regard to the OEM table ID, to avoid obvious mistakes (eg. placing an SSDT-x.aml that is not a patched SSDT, or mixing up the naming/numbering of the SSDTs in ACPI/patched).\n \nWith the change to dynamic SSDT extraction file names (above) and this change, it means you can take any SSDT that was extracted, patch it, and place in ACPI/patched, and without making changes to DropOem or DropTables (or using SortedOrder) it will replace the original SSDT with the patched version, retaining SSDT order.  In other words, Clover does the right thing with AutoMerge=true, contrary to what it does by default.\n \nThis setting also affects how config.plist/ACPI/DSDT/Patches are treated.  Normally, such patches do not apply to SSDTs.  But with AutoMerge=true, such patches are now applied to patched OEM SSDTs in ACPI/patched.  Still, add-on SSDTs (eg. those that didn't match existing tables in XSDT), are not affected by ACPI/DSDT/Patches.  It means that no major surprises happen when you place a patched SSDTs in ACPI/patched.\n \nThe default of AutoMerge is false, so it is a feature you must explicitly select.<array>\n    <string>toBeDisabled.aml</string>\n    <string>toBeDisabled2.aml</string>\n    ...\n</array>"; ObjectID = "fYz-Cp-2LJ"; */
"fYz-Cp-2LJ.ibShadowedToolTip" = "AutoMerge功能，用于通过ACPI/patched中的内容合并/替换SSDT（或其他AML）\n\n
 
通过设置config.plist/ACPI/AutoMerge = true（默认为false以保留旧行为），ACPI / patched中的内容将尝试与XSDT引用的本机位进行匹配。 就像DSDT.aml放在ACPI / patched *中替换*本机DSDT一样，您可以使用此功能自动替换SSDT（或其他表），而无需使用DropTables或DropOem。 更重要的是，保留了表的相对顺序。 这意味着您可以只使用DropOem = true和SortedOrder来替换单个表（这意味着将所有SSDT放在ACPI/patched中）。\n\n
 
匹配基于文件名和OemTableID/signature.\n\n
 
对于SSDT，文件名中的数字用于在XSDT中查找索引。 因此，ACPI/patched中名为\nSSDT-5.aml的文件将替换XSDT中的第6个SSDT（因为SSDT从SSDT-0.aml开始提取）。 \n关于OEM表ID进行附加检查，以避免明显的错误（例如，放置不是修补SSDT的SSDT-x.aml，或混合ACPI/patched中SSDT的命名/编号）。 \n
通过更改动态SSDT提取文件名（上面）和此更改，\n这意味着您可以获取已提取的任何SSDT，对其进行修补，并放置在ACPI /修补程序中，而无需更改DropOem或\nDropTables（或使用SortedOrder） 它将用修补版本替换原来的SSDT，保留SSDT订单。 换句话说，Clover使用AutoMerge = true做正确的事情，这与默认情况下的做法相反。\n
 
确实，这些补丁现在应用于ACPI /补丁中的修补OEM SSDT。但是，附加SSDT（例如那些与XSDT中的现有表不匹配的SSDT）不受ACPI / DSDT /补丁的影响。这意味着当您将修补后的SSDT放入ACPI / patched时，不会发生重大意外。 \n
AutoMerge的默认值为false，因此它是您必须明确选择的功能。<array>\n<string>toBeDisabled.aml</string>\n<string>toBeDisabled2.aml</string>\n    ...\n</array>";

/* Class = "NSButton"; ibShadowedToolTip = "New way to patch an IntelGFX device."; ObjectID = "gaI-9R-Lhu"; */
"gaI-9R-Lhu.ibShadowedToolTip" = "修补IntelGFX设备的新方法。";

/* Class = "NSButton"; ibShadowedToolTip = "<key>EnableC4</key>\n<true/>\nThis key allows you to enable the C4 states generator. Disabled by default."; ObjectID = "hkD-Lc-e2c"; */
"hkD-Lc-e2c.ibShadowedToolTip" = "<key>EnableC4</key>\n<true/>\n\n此键允许您启用C4状态生成器。默认情况下禁用。";

/* Class = "NSButton"; ibShadowedToolTip = "Fix non-ascii characters in ACPI tables headers."; ObjectID = "hSy-Jr-ymP"; */
"hSy-Jr-ymP.ibShadowedToolTip" = "修复ACPI表头中的非ascii字符。";

/* Class = "NSButton"; ibShadowedToolTip = "Enable or disable fix on MCFG table, disabled by default."; ObjectID = "hTw-Km-4Vm"; */
"hTw-Km-4Vm.ibShadowedToolTip" = "启用或禁用MCFG表上的修复，默认情况下禁用。";

/* Class = "NSButton"; ibShadowedToolTip = "If you see in system log:\n\nAppleLPC::notifyPlatformASPM - registering with plugin with ASPM Support false\n\nThe message will gone and macOS works smoother.\nWhy? This is FADT->Flags bit 4.\nIf set, indicates to OSPM that it must not enable OSPM ASPM control on this platform.\nYes, macOS can't control hackintosh hardware ASPM. (OSPM = OS Power Management)"; ObjectID = "iCt-FQ-aaj"; */
"iCt-FQ-aaj.ibShadowedToolTip" = "如果你在系统日志中看到：\n\n

AppleLPC :: notifyPlatformASPM  - 使用ASPM支持插件注册false\n\n

消息将消失，macOS工作更顺畅。\n
为什么？ 这是FADT->Flags bit 4。\n
如果设置，则向OSPM表明它不能在该平台上启用OSPM ASPM控制。\n
是的，macOS无法控制hackintosh硬件ASPM。 （OSPM = OS电源管理）";

/* Class = "NSButton"; ibShadowedToolTip = "Injects the DeviceID from ICH6 to prevent the orange icons problem. \nNowadays this patch looks to be obsolete. \nIt is better to do the kext binary patch instead."; ObjectID = "jcL-Td-68d"; */
"jcL-Td-68d.ibShadowedToolTip" = "从ICH6注入DeviceID以防止橙色图标问题。\n
现在这个补丁看起来已经过时了。\n
最好是改为使用kext二进制补丁。\n";

/* Class = "NSButton"; ibShadowedToolTip = "Adds device MCHC to DSDT. For H61M this is obligatory, else KP."; ObjectID = "Jds-ye-0B2"; */
"Jds-ye-0B2.ibShadowedToolTip" = "将设备MCHC添加到DSDT。对于H61M，这是强制性的，否则KP。";

/* Class = "NSTextField"; ibShadowedToolTip = "<key>ResetAddress</key>\n<string>0x0CF9</string>\n\nand the below\n\n<key>ResetValue</key>\n<string>0x06</string>\n\n\nThese two parameters serve a very important purpose: to fix restart. \nThese values theoretically should be in the FADT table, but it is not always the case. \nFurthermore, FADT may be shorter than required and not contain them at all. \nDefault values are 0x64/0xFE, which means a restart through the PS2 controller.\nHowever, this does not work on every system and you can alternatively use 0x0CF9/0x06, \nwhich indicates a restart though the PCI rail. \nThis is the default value for real Macs but does not always work on a hackintosh. \nThe difference is clear: a hackintosh additionally has a PS2 controller, \nwhich may prevent rebooting, if not disabled.\nLast but not least you can set them to 0x0/0x0 to allow the use of default FACP values. \nIf not present, the default values states above will be used instead."; ObjectID = "Jga-JJ-yis"; */
"Jga-JJ-yis.ibShadowedToolTip" = "<key>ResetAddress</key>\n<string>0x0CF9</string>\n\nand the below<key>ResetValue</key><string>0x06</string>这两个参数有一个非常重要的目的：修复重启。\n
这些值理论上应该在FADT表中，但情况并非总是如此。\n
此外，FADT可能比所需的短，并且根本不包含它们。\n
默认值为0x64/0xFE，表示通过PS2控制器重启。\n
但是，这不适用于每个系统，您也可以使用0x0CF9/0x06，\n
表示通过PCI轨重启。\n
这是真正的Mac的默认值，但并不总是适用于黑苹果。\n
区别很明显：黑苹果还有一个PS2控制器，\n
这可能会阻止重新启动，如果没有禁用。\n
最后但并非最不重要的是，您可以将它们设置为0x0/0x0以允许使用默认的FACP值。\n
如果不存在，则将使用上面的默认值。";

/* Class = "NSComboBox"; ibShadowedToolTip = "<key>PLimitDict</key>\n<string>1</string>\nLimits the maximal CPU frequency.\n\n0 - No limit.\n1 - Reduce frequency by one step\n2 - Reduce frequency by two steps\nExample: A Core2Duo T8300 with 2400 MHz operates at a maximal frequency of 2000 MHz when limited by two steps. This parameter might be used to reduce heat in mobile systems.\n\nThe same parameter exists in platform plists, for example in: System/Library/Extensions/IOPlaEormPluginFamily.kext/Contents/PlugIns/ACPI_SMC_PlaEormPlugin.kext/Conte nts/Resources/MacBook5_1.plist.\nThey will be discussed later.\n\nOther CPUs may need other values. This value has a reversed effect on a Core2Quad for instance. The optimal value is 1 in this case. It may be a DSDT error, though."; ObjectID = "jwH-TR-qrW"; */
"jwH-TR-qrW.ibShadowedToolTip" = "<key>PLimitDict</key>\n<string>1</string>\n\n限制最大CPU频率。
0 - 无限制.\n
1 - 将频率降低一步\n
2 - 将频率降低两步\n
示例：当受限于两个步骤时，具有2400 MHz的Core2Duo T8300在最大频率2000 MHz下运行。此参数可用于减少移动系统中的热量。\n
平台plists中存在相同的参数，例如：System/Library/Extensions/IOPlaEormPluginFamily.kext/Contents/PlugIns/ACPI_SMC_PlaEormPlugin.kext/Contents/Resources/MacBook5_1.plist。
他们将在稍后讨论。\n

其他CPU可能需要其他值。 例如，该值对Core2Quad具有相反的效果。 在这种情况下，最佳值为1。 但它可能是DSDT错误。";

/* Class = "NSButton"; ibShadowedToolTip = "Patch for the FATD table to fix restart problems."; ObjectID = "Klz-ag-dZN"; */
"Klz-ag-dZN.ibShadowedToolTip" = "修补FATD表以修复重启问题。";

/* Class = "NSButton"; ibShadowedToolTip = "Adds Return(Package(0)) into method _WAK if absent. \nThis patch eliminates a warning, but we don't know if it \naffects anything else on a working system."; ObjectID = "KQC-r6-auD"; */
"KQC-r6-auD.ibShadowedToolTip" = "如果不存在，则将Return(Package(0))添加到方法_WAK中。\n
此补丁消除了警告，但我们不知道是否
影响工作系统上的任何其他内容。";

/* Class = "NSButton"; ibShadowedToolTip = "Injects device and properties for the LAN controller.\nAlso made FakeID for some known substitutions."; ObjectID = "KqL-hQ-cAE"; */
"KqL-hQ-cAE.ibShadowedToolTip" = "注入LAN控制器的设备和属性。\n
还为一些已知的替换制作了FakeID。";

/* Class = "NSButton"; ibShadowedToolTip = "Adds IRQ(0, 8, 11) to device HPET. Obligatory for OSX <= 10.8,\nMavericks can work without it."; ObjectID = "Lel-Vs-BsK"; */
"Lel-Vs-BsK.ibShadowedToolTip" = "添加IRQ(0, 8, 11)到设备HPET. OSX的强制<= 10.8，\n
Mavericks 没有它不能工作.";

/* Class = "NSButton"; ibShadowedToolTip = "Inserts APLF to CpuPm SSDT"; ObjectID = "Ljr-1u-hzE"; */
"Ljr-1u-hzE.ibShadowedToolTip" = "插入APLF到CpuPm SSDT";

/* Class = "NSButton"; ibShadowedToolTip = "Changes the device-id for the LPC chipset device. \nNeeded in very rare cases for non-standard (for Apple) chipsets, like ICH9."; ObjectID = "lTv-ds-RYE"; */
"lTv-ds-RYE.ibShadowedToolTip" = "更改LPC芯片组设备的device-id。\n
非常罕见的情况下需要非标准（Apple）芯片组，如ICH9。";

/* Class = "NSButton"; ibShadowedToolTip = "Adds SMBUS device into DSDT, with some sub-device. \nI don't know the reason for the patch but it's advised in many forums. \nNever seen any problem with this bit."; ObjectID = "LV7-fj-m5P"; */
"LV7-fj-m5P.ibShadowedToolTip" = "将SMBUS设备添加到DSDT中，带有一些子设备。\n
我不知道修补程序的原因，但在许多论坛中都建议这样做。\n
从未见过这一点有任何问题。\n";

/* Class = "NSButton"; ibShadowedToolTip = "<key>Debug</key>\n<true/>\n\nEnable the debug logs of DSDT section."; ObjectID = "mcq-U0-L7F"; */
"mcq-U0-L7F.ibShadowedToolTip" = "<key>Debug</key>\n<true/>\n\n启用DSDT部分的调试日志。";

/* Class = "NSComboBox"; ibShadowedToolTip = "<key>UnderVoltStep</key>\n<string>1</string>\nThis parameter lowers the CPU voltage and indirectly affects the temperature. Possible values are 0, 1, 2, etc. Clover will only allow sane values, meaning it is safe to increase this value until the CPU stops working correctly."; ObjectID = "MDY-R1-Hlx"; */
"MDY-R1-Hlx.ibShadowedToolTip" = "<key>UnderVoltStep</key>\n<string>1</string>\n此参数会降低CPU电压并间接影响温度。可能的值为0,1,2等.Clover将仅允许合理的值，这意味着在CPU停止正常工作之前增加此值是安全的。";

/* Class = "NSButton"; ibShadowedToolTip = "<key>DropOEM_DSM</key>\n<true/>\nSome OEM DSDT already contains Method(_DSM...) for some devices. It has another structure, another logic, and another results then we need. But we can't modify this method, and we can't create own method with the same name, so DropOEM_DSM was created to drop these OEM _DSM.\n\nDefault value is false if using a custom DSDT and true if using BIOS.aml.\n\nAlternatively if you only need to drop the _DSM for certain devices, you can select any of these individually:\n\n<key>DropOEM_DSM</key>\n<dict>\n\t<key>ATI</key>\n\t<true/>\n\t<key>Firewire</key>\n\t<true/>\n\t<key>HDA</key>\n\t<true/>\n\t<key>HDMI</key>\n\t<true/>\n\t<key>IDE</key>\n\t<true/>\n\t<key>IntelGFX</key>\n\t<true/>\n\t<key>LAN</key>\n\t<true/>\n\t<key>LPC</key>\n\t<true/>\n\t<key>NVidia</key>\n\t<true/>\n\t<key>SATA</key>\n\t<true/>\n\t<key>SmBUS</key>\n\t<true/>\n\t<key>USB</key>\n\t<true/>\n\t<key>WIFI</key>\n\t<true/>\n</dict>"; ObjectID = "N1p-Js-JqA"; */
"N1p-Js-JqA.ibShadowedToolTip" = "<key>DropOEM_DSM</key>\n<true/>\n某些OEM DSDT已经包含某些设备的Method（_DSM ...）。它有另一个结构，另一个逻辑，然后我们需要另一个结果。但我们无法修改此方法，也无法创建具有相同名称的自有方法，因此创建DropOEM_DSM以删除这些OEM _DSM。\n
如果使用自定义DSDT，则默认值为false;如果使用BIOS.aml，则默认值为true。\n\n

或者，如果您只需要删除某些设备的_DSM，您可以选择其中任何一种                               个别:\n\n<key>DropOEM_DSM</key>\n<dict>\n\t<key>ATI</key>\n\t<true/>\n\t<key>Firewire</key>\n\t<true/>\n\t<key>HDA</key>\n\t<true/>\n\t<key>HDMI</key>\n\t<true/>\n\t<key>IDE</key>\n\t<true/>\n\t<key>IntelGFX</key>\n\t<true/>\n\t<key>LAN</key>\n\t<true/>\n\t<key>LPC</key>\n\t<true/>\n\t<key>NVidia</key>\n\t<true/>\n\t<key>SATA</key>\n\t<true/>\n\t<key>SmBUS</key>\n\t<true/>\n\t<key>USB</key>\n\t<true/>\n\t<key>WIFI</key>\n\t<true/>\n</dict>";

/* Class = "CocoaBindingsConnection"; ibShadowedIsNilPlaceholder = "hex or number"; ObjectID = "nRn-bw-I6o"; */
"nRn-bw-I6o.ibShadowedIsNilPlaceholder" = "十六进制或数字";

/* Class = "NSTextField"; ibShadowedToolTip = "<key>C3Latency</key>\n<integer>250</integer>\n\nor also\n\n<key>C3Latency</key>\n<string>0xFA</string>\n\nC3 states latency. You know what to do.. value above is for example."; ObjectID = "NUp-0c-FOE"; */
"NUp-0c-FOE.ibShadowedToolTip" = "<key>C3Latency</key>\n<integer>250</integer>\n\nor also\n\n<key>C3Latency</key>\n<string>0xFA</string>\n\nC3表示延迟。你知道怎么做..上面的值是例子.";

/* Class = "NSTextField"; ibShadowedToolTip = "<key>ResetValue</key>\n<string>0x06</string>\n\nand the below\n\n<key>ResetAddress</key>\n<string>0x0CF9</string>\n\n\nThese two parameters serve a very important purpose: to fix restart. \nThese values theoretically should be in the FADT table, but it is not always the case. \nFurthermore, FADT may be shorter than required and not contain them at all. \nDefault values are 0x64/0xFE, which means a restart through the PS2 controller.\nHowever, this does not work on every system and you can alternatively use 0x0CF9/0x06, \nwhich indicates a restart though the PCI rail. \nThis is the default value for real Macs but does not always work on a hackintosh. \nThe difference is clear: a hackintosh additionally has a PS2 controller, \nwhich may prevent rebooting, if not disabled.\nLast but not least you can set them to 0x0/0x0 to allow the use of default FACP values. \nIf not present, the default values states above will be used instead."; ObjectID = "NVX-g4-ytQ"; */
"NVX-g4-ytQ.ibShadowedToolTip" = "<key>ResetValue</key>\n<string>0x06</string>\n\nand the below\n\n<key>ResetAddress</key>\n<string>0x0CF9</string>\n\n\n这两个参数有一个非常重要的目的：修复重启。这些值理论上应该在FADT表中，但情况并非总是如此。\n
此外，FADT可能比所需的短，并且根本不包含它们。\n
默认值是0x64/0xFE, 这意味着通过PS2控制器重启。\n
但是，这不适用于每个系统，您也可以使用0x0CF9 / 0x06, \n
表示通过PCI重启。\n
这是真正的Mac的默认值，但并不总是适用于黑苹果。\n
区别很明显：黑苹果还有一个PS2控制器，\n
这可能会阻止重新启动，如果没有禁用。\n
最后但并非最不重要的是，您可以将它们设置为0x0 / 0x0以允许使用默认的FACP值。\n
如果不存在，则将使用上面的默认值。\n";

/* Class = "NSTextField"; ibShadowedToolTip = "<key>MinMultiplier</key>\n<integer>7</integer>\nMinimal CPU multiplier. Usually a value of 16 is ported, resulting in a frequency of 1600 MHz but you should use lower values when using SpeedStep, like 8 or even 7."; ObjectID = "O2a-KC-DUs"; */
"O2a-KC-DUs.ibShadowedToolTip" = "<key>MinMultiplier</key>\n<integer>7</integer>\n最小的CPU倍频。通常移植16的值，导致频率为1600 MHz，但在使用SpeedStep时应使用较低的值，如8或甚至7。";

/* Class = "NSTextField"; ibShadowedToolTip = "<key>Name</key>\n<string>DSDT.aml</string>\n\nFile name of the binary DSDT file to load and inject."; ObjectID = "O7A-vf-aOw"; */
"O7A-vf-aOw.ibShadowedToolTip" = "<key>Name</key>\n<string>DSDT.aml</string>\n\n要加载和注入的二进制DSDT文件的文件名。";

/* Class = "NSButton"; ibShadowedToolTip = "This parameter affects the power profile, which will be written into table FADT.\n\nValue|Type|Power supply type :---|:---|:--- 1|Desktop|AC 2|Mobile|Battery 3|Server|SmartUPS\n\nClover will choose between 1 and 2 according to the mobility bit \nand according to the Mobile parameter in SMBIOS. \nIt is, for example, possible to fake a mobile MacMini. \nValue 3 will be chosen if this parameter is enabled."; ObjectID = "oer-mY-NZs"; */
"oer-mY-NZs.ibShadowedToolTip" = "此参数会影响功率配置文件，该功能配置文件将写入表FADT。\n\n

值|类型|电源类型：--- |：--- |：--- 1 |桌面| AC 2 |手机|电池3 |服务器| SmartUPS\n\n

Clover将根据移动位选择1到2之间\n
并根据SMBIOS中的Mobile参数。\n
例如，可以假装移动MacMini。\n
如果启用此参数，将选择值3。";

/* Class = "NSButton"; ibShadowedToolTip = "Adds initialization for IDE controllers (not SATA) to prevent panic with it."; ObjectID = "oh7-T6-pIG"; */
"oh7-T6-pIG.ibShadowedToolTip" = "为IDE控制器（而不是SATA）添加初始化以防止出现混乱。";

/* Class = "NSTableView"; ibShadowedToolTip = "<key>DropTables</key>\n<array>\n  <dict>\n    <key>Signature</key>\n    <string>SSDT</string>\n    <key>TableId</key>\n    <string>SataTabl</string>\n  </dict>\n  <dict>\n    <key>Signature</key>\n    <string>SSDT</string>\n    <key>TableId</key>\n    <string>SataAddr</string>\n  </dict>\n  <dict>\n    <key>Signature</key>\n    <string>BGRT</string>\n  </dict>\n  <dict>\n    <key>TableId</key>\n    <string>A M I</string> (WARNING: DO NOT DO THIS!!!!!!!)\n  </dict>\n  ...\n</array>\nDrop OEM ACPI tables by signature and/or table identifier.\n\nAdditionally, now you can drop tables by their length. Why? Because we found Acer laptop where all SSDT have the same TableID.\n\n<key>DropTables</key>\n<array>\n  <dict>\n    <key>Signature</key>\n    <string>SSDT</string>\n    <key>Length</key>\n    <integer>720</integer>\n  </dict>\n</array>"; ObjectID = "OLn-tS-JOF"; */
"OLn-tS-JOF.ibShadowedToolTip" = "<key>DropTables</key>\n<array>\n<dict>\n<key>Signature</key>\n<string>SSDT</string>\n<key>TableId</key>\n<string>SataTabl</string>\n</dict>\n<dict>\n<key>Signature</key>\n<string>SSDT</string>\n<key>TableId</key>\n<string>SataAddr</string>\n</dict>\n<dict>\n<key>Signature</key>\n<string>BGRT</string>\n</dict>\n<dict>\n<key>TableId</key>\n<string>A M I</string>(警告：不要这样做!!!!!!!)</dict>\n  ...\n</array>按签名和/或表标识符删除OEM ACPI表。\n\n

此外，现在您可以按表的长度删除表。为什么？因为我们发现Acer笔记本电脑所有SSDT都具有相同的TableID。\n\n<key>DropTables</key>\n<array>\n<dict>\n<key>Signature</key>\n<string>SSDT</string>\n<key>Length</key>\n<integer>720</integer>\n</dict>\n</array>";

/* Class = "NSTableView"; ibShadowedToolTip = "May you need to load your acpi tables in a certain order after\ndropping, load, disable.. some of it."; ObjectID = "OtX-jG-4Xq"; */
"OtX-jG-4Xq.ibShadowedToolTip" = "您可能需要在以后按特定顺序加载您的acpi表\n
删除，加载，禁用..其中一些。";

/* Class = "NSTableView"; ibShadowedToolTip = "Disable the specified aml table."; ObjectID = "QNa-bM-Ygz"; */
"QNa-bM-Ygz.ibShadowedToolTip" = "禁用指定的aml表。";

/* Class = "NSButton"; ibShadowedToolTip = "Adds device Firewire into DSDT if absent and if the device really present. \nSafe."; ObjectID = "Rc4-tj-8Rc"; */
"Rc4-tj-8Rc.ibShadowedToolTip" = "如果没有设备Firewire并将设备真正存在，则将其添加到DSDT中。\n
安全。";

/* Class = "NSBox"; ibShadowedToolTip = "<key>SSDT</key>\n<dict>\n...\n</dict>\nParameter group affecting SSDTs."; ObjectID = "RCR-Ih-qYY"; */
"RCR-Ih-qYY.ibShadowedToolTip" = "<key>SSDT</key>\n<dict>\n...\n</dict>\n影响SSDT的参数组。";

/* Class = "NSButton"; ibShadowedToolTip = "Some systems can either be started using the kernel parameter cpus=1, \nor by using a patched kernel (Lapic NMI). \nIt turns out that in these case the table MADT is incomplete and missing the NMI section. \nEnabling this parameter will cause Clover to automatically correct this table. \nIf the table already is complete, then nothing will be changed."; ObjectID = "RTx-HB-nsm"; */
"RTx-HB-nsm.ibShadowedToolTip" = "某些系统可以使用内核参数cpus = 1启动，\n
或者使用修补内核（Lapic NMI）。\n
事实证明，在这些情况下，表MADT是不完整的并且缺少NMI部分。\n
启用此参数将导致Clover自动更正此表。\n
如果表已经完成，那么什么都不会改变。";

/* Class = "NSButton"; ibShadowedToolTip = "<key>AddDTGP</key>\n<true/>\n\nInserts Method (DTGP) into DSDT. It is required for _DSM methods, \nso if you use some other DSDT fix to inject device properties \nthen you must enable this. \nNo sense to use this method without other fixes."; ObjectID = "RzO-D2-a3y"; */
"RzO-D2-a3y.ibShadowedToolTip" = "<key>AddDTGP</key>\n<true/>\n\n插入Method (DTGP) 到DSDT. 它是_DSM方法所必需的, \n
因此，如果您使用其他DSDT修复程序来注入设备属性\n
那么你必须启用它。\n
没有其他修复就没有意义使用这种方法。";

/* Class = "NSComboBox"; ibShadowedToolTip = "Changes the type of power management plugin your system will use. \nPossible values are: \n\n* 0 - ACPI_SMC_PlatformPlugin will be used \n* 1 - X86PlatformPlugin will be used. Select for Ivy Bridge +"; ObjectID = "Rzw-9e-3NX"; */
"Rzw-9e-3NX.ibShadowedToolTip" = "更改系统将使用的电源管理插件的类型。
可能的值是：\n

* 0 - 将使用ACPI_SMC_PlatformPlugin\n
* 1 - 将使用X86PlatformPlugin。选择Ivy Bridge +";

/* Class = "NSButton"; ibShadowedToolTip = "Inserts APSN to CpuPm SSDT"; ObjectID = "sDY-89-f8k"; */
"sDY-89-f8k.ibShadowedToolTip" = "将APSN插入CpuPm SSDT";

/* Class = "NSButton"; ibShadowedToolTip = "<key>ReuseFFFF</key>\n<true>\nSome OEM DSDT contains some device with Name (_ADR, 0xFFFF). This is a big problem as I can convert it to ADR=0 and inject properties but this is dangerous patch, it may lead to panic on IOPCIFamily.kext. So this key is proposed which will convert this device to (ADR, 0) and reused for injection. (FakeID for example)"; ObjectID = "sgl-xT-Xbu"; */
"sgl-xT-Xbu.ibShadowedToolTip" = "<key>ReuseFFFF</key>\n<true>\n\n
某些OEM DSDT包含一些带有Name（_ADR，0xFFFF）的设备。 这是一个很大的问题，因为我可以将其转换为ADR = 0并注入属性，但这是一个危险的补丁，它可能会导致IOPCIFamily.kext出现恐慌。 因此提出了这个密钥，它将该设备转换为（ADR，0）并重新用于注入。 （例如FakeID）";

/* Class = "NSButton"; ibShadowedToolTip = "Excludes IRQ(8) from TMR device. \nThis is an ancient DOS device and is not needed in modern computers."; ObjectID = "SvT-dN-vk7"; */
"SvT-dN-vk7.ibShadowedToolTip" = "从TMR设备中排除 IRQ(8)。\n
这是一种古老的DOS设备，在现代计算机中不需要。";

/* Class = "NSTableView"; ibShadowedToolTip = "More exact renaming Devices in DSDT and SSDT taking into account its bridge.\nExample: \n<key>ACPI</key>\n\t<dict>\n\t\t<key>RenameDevices</key>\n\t\t<dict>\n\t\t\t<key>_SB.PCI0.RP02.PSXS</key>\n\t\t\t<string>ARPT</string>\n\t\t\t<key>_SB.PCI0.EHC1</key>\n\t\t\t<string>EH01</string>\n\t\t\t<key>_SB.PCI0.POP2.PEGP</key>\n\t\t\t<string>GFX0</string>\n\t\t</dict>\nComplex case such as this DSDT is also taken into account.\nExample:\n_SB.PCI0.RP02.PSXS\nWe have to take into account fields like\nScope(\\_SB)\n{\n  Device (PCI0)\n  {\n    Device(RP02)\n    {\n      Device(PSXS)  <- to patch\n      {\n\t\tMethod(_ON)\n\t\t{\n\t\t}\n\t\tMethod(_OFF)\n\t\t{\n\t\t}\n\n\t  }\n\t  PSXS._ON() <- to patch\n\t}\n\tScope(RP02)\n\t{\n\t  PSXS._OFF() <- to patch\n\t}\n\tDevice(RP03)\n\t{\n\t  Device(PSXS) <- to not patch\n\t  {\n\t  }\n\t  PSXS._ON() <- to not patch\n\t}"; ObjectID = "sXu-RZ-a8b"; */
"sXu-RZ-a8b.ibShadowedToolTip" = "更精确地重命名DSDT和SSDT中的设备，同时考虑其桥接\n
例如:n<key>ACPI</key>\n\t<dict>\n\t\t<key>RenameDevices</key>\n\t\t<dict>\n\t\t\t<key>_SB.PCI0.RP02.PSXS</key>\n\t\t\t<string>ARPT</string>\n\t\t\t<key>_SB.PCI0.EHC1</key>\n\t\t\t<string>EH01</string>\n\t\t\t<key>_SB.PCI0.POP2.PEGP</key>\n\t\t\t<string>GFX0</string>\n\t\t</dict>\n还考虑了诸如此DSDT的复杂情况。
例如:\n
_SB.PCI0.RP02.PSXS\nWe have to take into account fields like\nScope(\\_SB)\n{\n  Device (PCI0)\n  {\n    Device(RP02)\n    {\n      Device(PSXS)<- to patch\n      {\n\t\tMethod(_ON)\n\t\t{\n\t\t}\n\t\tMethod(_OFF)\n\t\t{\n\t\t}\n\n\t  }\n\t  PSXS._ON()<- to patch\n\t}\n\tScope(RP02)\n\t{\n\t  PSXS._OFF()<- to patch\n\t}\n\tDevice(RP03)\n\t{\n\t  Device(PSXS)<- to not patch\n\t  {\n\t  }\n\t  PSXS._ON()<- to not patch\n\t}";

/* Class = "NSButton"; ibShadowedToolTip = "Some OperationRegions in Bios DSDT are floating and values \nmay change in time due to changes in the BIOS. \nThe presence of floating regions makes it impossible \nto use a custom DSDT because this region may be shifted \nand will not correspond to the current state. \nThis patch is intended to find all such regions in BIOS and correct them in custom DSDT."; ObjectID = "TDb-hX-ayw"; */
"TDb-hX-ayw.ibShadowedToolTip" = "Bios DSDT中的一些OperationRegions是浮动和值\n
由于BIOS的变化，可能会及时更改。\n
浮动区域的存在使其成为不可能
使用自定义DSDT，因为可能会移动此区域
并且不符合当前的状态。\n
此修补程序旨在查找BIOS中的所有此类区域，并在自定义DSDT中进行更正。";

/* Class = "NSButton"; ibShadowedToolTip = "Adds If(arg=5){} to method _PTS. \nThis trick may repair shutdown problems for some systems (like ASUS)."; ObjectID = "Tui-lw-gUI"; */
"Tui-lw-gUI.ibShadowedToolTip" = "添加 If(arg=5){}到method _PTS. \n
这个技巧可能会修复某些系统（如ASUS）的关机问题。";

/* Class = "NSButton"; ibShadowedToolTip = "The ACPI runtime in macOS/OS X does not work correctly with Mutex objects with a non-zero SyncLevel, even when used in a valid scenario.\nSuch Mutex definions must be changed to use SyncLevel 0.\nThe FixMutex feature is an easy way to fix all of them in DSDT."; ObjectID = "TxV-JD-sjp"; */
"TxV-JD-sjp.ibShadowedToolTip" = "即使在有效方案中使用，macOS OS X中的ACPI运行时也无法与具有非零SyncLevel的Mutex对象一起正常工作。\n
必须更改此类互斥锁定义以使用SyncLevel 0。\n
FixMutex功能是一种在DSDT中修复所有这些功能的简便方法。";

/* Class = "NSButton"; ibShadowedToolTip = "Adds the HDAU device if absent, with some default properties."; ObjectID = "Ue7-vJ-xDA"; */
"Ue7-vJ-xDA.ibShadowedToolTip" = "添加HDAU设备（如果不存在），具有一些默认属性。";

/* Class = "NSBox"; ibShadowedToolTip = "Generate an SSDT with p-states and c-states."; ObjectID = "UWH-j3-WaF"; */
"UWH-j3-WaF.ibShadowedToolTip" = "生成具有p状态和c状态的SSDT。";

/* Class = "NSButton"; ibShadowedToolTip = "The device PNLF is necessary to have brightness control. \nThis patch is also a good influence for proper Sleep/Wake."; ObjectID = "UYl-1m-Lpa"; */
"UYl-1m-Lpa.ibShadowedToolTip" = "设备PNLF是亮度控制所必需的。\n
这个补丁对正确的睡眠/唤醒也有很好的影响。";

/* Class = "NSButton"; ibShadowedToolTip = "Deletes devices like Floppy drive, \nLPT port and others from the DSDT."; ObjectID = "VoS-Bu-03Y"; */
"VoS-Bu-03Y.ibShadowedToolTip" = "删除Floppy drive等设备\n
来自DSDT的LPT端口和其他端口。";

/* Class = "NSButton"; ibShadowedToolTip = "<key>NoOemTableId</key>\n<true/>\n\nTo disable OEM table ID on ACPI/orgin/SSDT file names"; ObjectID = "vwy-Cc-5SB"; */
"vwy-Cc-5SB.ibShadowedToolTip" = "<key>NoOemTableId</key>\n<true/>\n\n在ACPI/orgin/SSDT文件名上禁用OEM表ID";

/* Class = "NSTextFieldCell"; placeholderString = "hex or number"; ObjectID = "W3Q-9f-gWQ"; */
"W3Q-9f-gWQ.placeholderString" = "十六进制或数字";

/* Class = "NSTableColumn"; headerCell.title = "Type/key"; ObjectID = "WtF-Ra-tyb"; */
"WtF-Ra-tyb.headerCell.title" = "Type/key";

/* Class = "NSTableColumn"; headerToolTip = "Type/key"; ObjectID = "WtF-Ra-tyb"; */
"WtF-Ra-tyb.headerToolTip" = "Type/key";

/* Class = "NSButton"; ibShadowedToolTip = "Also resolves some Sleep/Wake problems by correcting _S3D methods."; ObjectID = "wX2-H5-kub"; */
"wX2-H5-kub.ibShadowedToolTip" = "还可以通过更正_S3D方法解决一些睡眠/唤醒问题。";

/* Class = "NSButton"; ibShadowedToolTip = "<key>EnableC2</key>\n<true/>\nThis key allows you to enable the C2 states generator. Disabled by default."; ObjectID = "WzK-0m-RGZ"; */
"WzK-0m-RGZ.ibShadowedToolTip" = "<key>EnableC2</key>\n<true/>\n此键允许您启用C2状态生成器。默认情况下禁用。";

/* Class = "NSButton"; ibShadowedToolTip = "Renames AZAL to HDEF or HDAU. Adds the HMDI device if absent. \nElse AppleHDA will not work. Adds the properties \"layout-id\", \n\"MaximumBootBeepVolume\" and \"PinConfigurations\"."; ObjectID = "xf1-lI-6p1"; */
"xf1-lI-6p1.ibShadowedToolTip" = "将AZAL重命名为HDEF或HDAU。如果不存在，则添加HMDI设备。\n
否则AppleHDA将无效。添加属性\"layout-id\"，\n
\"MaximumBootBeepVolume\"和\"PinConfigurations\"。";

/* Class = "NSButton"; ibShadowedToolTip = "<key>EnableC6</key>\n<true/>\nThis key allows you to enable the C6 states generator."; ObjectID = "xYb-XE-RHK"; */
"xYb-XE-RHK.ibShadowedToolTip" = "<key>EnableC6</key>\n<true/>\n\n此键允许您启用C6状态生成器。";

/* Class = "NSButton"; ibShadowedToolTip = "<key>EnableC7</key>\n<true/>\nThis key allows you to enable the C7 states generator. Disabled by default."; ObjectID = "XZZ-cF-eTb"; */
"XZZ-cF-eTb.ibShadowedToolTip" = "<key>EnableC7</key>\n<true/>\n此键允许您启用C7状态生成器。默认情况下禁用。";

/* Class = "NSButton"; ibShadowedToolTip = "<key>Generate</key>\n<dict>\n  <key>CStates</key>\n  <true/>\n</dict>\nAutomatic SSDT table generation, which extends the processor section with _CST methods for each core. _CST generation is affected by parameters EnableC2, EnableC4, EnableC6, EnableISS, C3Latency. There is no need to comment them as everything will work either way. Experiment by yourself.\nBesides, Clover already has obtained the processor type and core count.\nNot using this parameter will result in following error message: ACPI_SMC_PlatformPlugin::pushCPU_CSTData - _CST evaluation failed."; ObjectID = "YGh-aR-Qpu"; */
"YGh-aR-Qpu.ibShadowedToolTip" = "<key>Generate</key>\n<dict>\n<key>CStates</key>\n<true/></dict>\n\n自动SSDT表生成，使用_CST方法为每个核扩展处理器部分。 \n_CST生成受参数EnableC2，EnableC4，EnableC6，EnableISS，C3Latency的影响。没有必要对它们进行注释，因为一切都会起作用。自己做实验。\n
此外，Clover已经获得了处理器类型和核心数量。\n
不使用此参数将导致以下错误消息：\nACPI_SMC_PlatformPlugin :: pushCPU_CSTData - _CST评估失败。";

/* Class = "NSButton"; ibShadowedToolTip = "Injects USB devices and their properties for USB-1, \nUSB-2 and USB-3. No reason not to use this bit."; ObjectID = "yqA-Z1-Xka"; */
"yqA-Z1-Xka.ibShadowedToolTip" = "为USB-1注入USB设备及其属性，\n
USB-2和USB-3。没理由不使用这个位。";

/* Class = "NSMenuItem"; title = "List Of Patches"; ObjectID = "yqg-Tz-OBP"; */
"yqg-Tz-OBP.title" = "补丁列表";

/* Class = "NSTabView"; ibShadowedToolTip = "This parameter represents a whole set of DSDT patches \nwhich can be activated individually. "; ObjectID = "zlp-4F-eaR"; */
"zlp-4F-eaR.ibShadowedToolTip" = "此参数表示一整套DSDT修补程序\n
可以单独激活。";

/* Class = "NSButton"; ibShadowedToolTip = "Deletes IRQ(2) from device IPIC. Helps with a non working Power button."; ObjectID = "Znz-uO-BAw"; */
"Znz-uO-BAw.ibShadowedToolTip" = "从设备IPIC中删除IRQ(2) 。有助于使用不工作的电源按钮。";

/* Class = "NSButton"; ibShadowedToolTip = "Dynamic SSDTs confuse users and are amost never needed.  Added an option to config.plist to disable extraction of them via Clover F4 (default is false)."; ObjectID = "Zpr-zM-4bX"; */
"Zpr-zM-4bX.ibShadowedToolTip" = "动态SSDT使用户感到困惑，而且从不需要。添加了config.plist选项以禁用通过Clover F4提取它们（默认为false）。";

/* Class = "NSButton"; ibShadowedToolTip = "<key>Rtc8Allowed</key>\n<false>\nSome users claim that RTC length may be 8 bytes without CMOS reset, but others claim that the reset is still occurring. For those who wants len=8 it should be set to true. Default is false."; ObjectID = "ZUY-vA-984"; */
"ZUY-vA-984.ibShadowedToolTip" = "<key>Rtc8Allowed</key>\n<false>\n\n一些用户声称RTC长度可能是8字节而没有CMOS复位，但其他用户声称复位仍在发生。 对于那些想要len = 8的人，应该设置为true。 默认值为false。";

